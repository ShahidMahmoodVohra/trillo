///////////////////////////////
/// LOGO
.logo{
    height: 3.25rem;
    margin-left: 2rem;
}

//////////////////////////////
/// SEARCH 
.search{ // background-color: orangered; for checking purpose 
    
    flex: 0 0 40%;

    display: flex;
    justify-content: center;
    align-items: center;

    @media screen and (max-width:$bp-smallest) {
        order: 1;
        flex: 0 0 100%;
        background-color: var(--color-grey-light-3);
    }

    &__input{
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-3);
        border: none;
        padding: .7rem 2rem;
        border-radius: 10rem;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;  // margin minus(-) given bcs this way button will move on the top of the input

        &:focus{
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        // to change placeholder text color
        // &::-webkit-input-placeholder{
        //     font-weight: 100;
        //     color: var(--color-grey-light-4);
        // }
        &:active{
            transform: translateY(2px);
        }
    }

        &__input:focus + __button{
            background-color: var(--color-grey-light-3);//input & button are sibling therfore v can use adjusant selector
        }

    &__button{
        border: none;
        background-color: var(--color-grey-light-2);
    }

    &__icon{
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);       // to change color of search-icon fill property is used
    }
} 

/////////////////////////////
/// USER NAVIGATION
.user-nav{
    // background-color: greenyellow;
    align-self: stretch;
    // after given bg color to direct children back ground color not covering full space to achieve fill space align self property used
    display: flex;
    align-items: center; // for space in user icon box & user instead of doing changes two times we do using group them and make a selector  user-nav & all(*) of the direct children (>) 
    & > *{
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;// we given height 100% bcs when hover bg not coverd full also center user & icon put the                   property of display flex & align-items here instead of icon & user section below
        display: flex;
        align-items: center;
    }

// on hover the background color change v use above metnod for back-ground

    & > *:hover{
        background-color: var(--color-grey-light-2);
    }


    &__icon-box{
        display: flex;
        align-items: center;

        position: relative;
    }

    &__icon{
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification{
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;     //for positioning we use property of absoulete & gives property relative to icon-box 
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;      // in notification no 7 & 13 are not center therfore we use again property of display:flex
        display: flex;
        justify-content: center;
        align-items: center;
    }
    // &__user{}

    &__user-photo{
        height: 3.55rem;
        width: 3.55rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

    // &__user-name{}
}
////////////////////////////
/// SIDE NAVIGATION
// .sidebar{
//     display: flex;
//     flex-direction: column;
//     justify-content: space-between;
    
    
// }
.side-nav{
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media screen and (max-width:$bp-medium) {
        display: flex;
        margin: 0;
        justify-content: center;
        
    }

    &__item{
        position: relative;

        &:not(:last-child){
            margin-bottom: .5rem;

         @media screen and (max-width:$bp-medium) {
            margin-bottom: 0;
         }
        }

        @media screen and (max-width:$bp-medium) {
            flex: 1;
        }
}

    &__item::before{
        content: "";
        position: absolute;
        top: 0;
        left: 0;  
        height: 100%; 
        width: 3px;     
        background-color: var(--color-primary);
        transform: scaleY(0);   // transform scale 0 bcs in the normal scale
        transition: transform .2s
                        width .4s cubic-bezier(1,0,0,1) .2s
                        background-color .1s;
         //transform-origin:center; usually start from cen. is dft value v can use from bottom
    }

    &__item:hover::before,  
    &__item--active::before{ // &__item--active::before works to remain nav bar hotel icon active color
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before{
        background-color: var(--color-primary-light);
        // for fast animation time background-color .1s is insert in above cubic-bezier 
    }

    &__link:link,
    &__link:visited{
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;

        position: relative; // z-index is working when position is relative & z-index is given to show text of nav bar
        z-index: 10; 
        
        // The icon and text of sidebar is not align vertically therefore we use display flex property
        display: flex;
        align-items: center;

        @media screen and (max-width:$bp-medium) {
            justify-content: center;
            padding: 2rem;
        }
        @media screen and (max-width:$bp-small) {
            flex-direction: column;
            padding: 1.5rem .5rem;
    
        }
    }

    &__icon{
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor;
        //  instead of using  fill: var(--color-grey-light-1);  we can use currentColor property is just the color of current element or parent element

        @media screen and (max-width:$bp-small) {
            margin-right: 0; 
            margin-bottom: .7rem; 
            height: 1.25rem; 
            width: 1.25rem;
        }
    }
}

////////////////////////////
/// LEGAL TEXT
.legal{
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media screen and (max-width:$bp-medium) {
        display: none;
    }
}

///////////////////////////
/// GALLERY
.gallery{
    display: flex;

    &__photo{
        width: 100%;
        display: block;
    }
}

/////////////////////////////
/// HOTEL OVERVIEW
 .overview{
    display: flex;
    border-bottom: 1px solid var(--color-grey-light-2);
    align-items: center;
    
    &__heading{
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media screen and (max-width:$bp-small) {
           font-size: 1.8rem;
           padding: 1.25rem 2rem;
        }
        @media screen and (max-width:$bp-smallest-4) {
            font-size: 1.5rem;
            padding: 1.15rem 1.8rem;
        }
        @media screen and (max-width:$bp-smallest-3) {
            font-size: 1rem;
            font-weight: 800;
        }

    }

    &__stars{
        // flex: 1; we use margin auto bcs flex 1 cover full space upto location
        // background-color: orangered;
        margin-right: auto;
        display: flex;    // for vertically center star display flex to it parent i.e overview__stars
    }

    &__icon-star,
    &__icon-location{
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);

        @media screen and (max-width:$bp-smallest-4) {
            width: 1.5rem;
            height: 1.5rem;
        }
    }

    &__location{
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }
    &__icon-location{
        margin-right: .5rem;
    }

    &__rating{
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem;
        align-self: stretch;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        @media screen and (max-width:$bp-small) {
            padding: 0 1.5;
        }
        @media screen and (max-width:$bp-smallest-3) {
            padding: 0 1rem;
        }
    }

    &__rating-average{
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media screen and (max-width:$bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count{
        font-size: .8rem;
        text-transform: uppercase;

        @media screen and (max-width:$bp-small) {
            font-size: .5rem;
        }
    }
 } 

 ///////////////////////////
 /// BUTTON INLINE
 .btn-inline{
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span{
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover{
        color: var(--color-grey-dark-1);

        span{
            margin-left: 8px;
        }
    }

    &:focus{
        outline: none;
        animation: pulsate 1s infinite;
    }
 }
 
 @keyframes pulsate{
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0, .25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
 }

//////////////////////////////// 
/// PARAGRAPH
.paragraph:not(:last of type){
    margin-bottom: 2rem;
}




//////////////////////////////// 
/// LIST
.list{
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap;

    @media screen and (max-width:$bp-smallest-4) {
        padding: .5rem 1rem;
    }

    @media screen and (max-width:$bp-smallest-3) {
        padding: .5rem 1rem;
    }

    &__item{
        flex: 0 0 50%;
        margin-bottom: .7rem;

        @media screen and (max-width:$bp-smallest-4) {
            flex:0 0 100%;
        }

        @media screen and (max-width:$bp-smallest-3) {
            flex:0 0 100%;
        }
    }

    &__item::before{
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        // Older browsers
        // background-image: url(../images/chevron-thin-right.svg);
        // background-size: cover;

        // Newer browsers - masks
        background-color: var(--color-primary);
        -webkit-mask-image:url(../images/chevron-thin-right.svg);
        -webkit-mask-size:cover;
        mask-image:url(../images/chevron-thin-right.svg);
        mask-size:cover;
    }
}



///////////////////////////////
///  RECOMMEND
.recommend{
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &__count{
        margin-right: auto;

    }

    &__friends{
        display: flex;
     }

    &__photo{
        box-sizing: content-box;
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;

        &:not(:last-child){
            margin-right: -2rem;       // margin-right work at -1.5rem but for media query -2rem than no need to fix in M.queries upt0 900px
        }
    }
}

////////////////////////////////////
/// REVIEWS
.review{
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    // for quotation mark position is relative & than absolute to below psceudo 
    position: relative;
    overflow: hidden;

    @media screen and (max-width:$bp-medium) {
     padding: 2rem;  
     margin-bottom: 3rem; 
    }

    &__text{
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;
        // z-index only work when the gives position
    }

    &__user{
        display: flex;
        align-items: center;
    }

    &__photo{
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box{
        margin-right: auto;
    }

    &__user-name{
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date{
        font-size: 1rem;
        color: var(--color-grey-dark-2);
    }

    &__rating{
        color: var(--color-primary);
        font-size: 2.2rem;
        font-weight: 300;

        @media screen and (max-width:$bp-smallest-4) {
            font-size: 1.75rem;
        }
    }

    // html entities css tricks search on google -- https://css-tricks.com/snippets/html/glyphs/

    &::before{
        content:"\201C"; 	
        // first give position to parent relative i.e review
        position: absolute; 
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        z-index: 1;
    }
}

////////////////////////////////
/// CALL TO ACTION
.cta{
    padding: 3.5rem 0;
    text-align: center;

    @media screen and (max-width:$bp-medium) {
     padding: 2.5rem 0;    
    }

    &__book-now{
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;

        @media screen and (max-width:$bp-smallest-4) {
            font-size: 1.6rem;
        }
        @media screen and (max-width:$bp-smallest-3) {
            font-size: 1.5rem;
            font-weight: 400;
            
        }
    }
}

//////////////////////////////
/// CALL TO ACTION
.btn{
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right,var(--color-primary-light),var(--color-primary-dark));
    color: #fff;
    position: relative;
    overflow: hidden;
    cursor: pointer;

    & > *{

        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s;
    }

    &__visible{
        display: inline-block;
        padding: 2rem 7.5rem;
    }

    &__invisible{
        position: absolute;
        padding: 2rem 0;
        left: 0;
        top: -100%;
    }

    &:hover{
        background-image: linear-gradient(to left,var(--color-primary-light),var(--color-primary-dark));
    }

    &:hover &__visible{
        transform: translateY(100%);
    }

    &:focus{
        outline: none;
        animation: pulsate 1s infinite;
    }

    &:hover &__invisible{
        top: 0;
    }
}
